services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    depends_on:
      - db
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  api_service:
    image: api_service:1.0
    depends_on:
      - db
      - gateway
    ports:
      - "8000:8000"
    environment:
      - spring.kafka.bootstrap-servers=kafka:9092


  eureka-server:
    image: eureka-server:1.6
    ports:
      - "8081:8081"
    environment:
      - spring.application.name=Eureka-server
      - server.port=8081
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
      - eureka.client.service-url.defaultZone=http://localhost:8081/eureka
      - logging.level.com.netflix.eureka=OFF
      - logging.level.com.netflix.discovery=OFF
      - logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n
      - eureka.instance.hostname=localhost
      - eureka.instance.non-secure-port-enabled=false
      - eureka.instance.secure-port-enabled=true
      - eureka.instance.statusPageUrl=http://localhost:8081/info
      - eureka.instance.healthCheckUrl=http://localhost:8081/health
      - eureka.instance.homePageUrl=http://localhost:8081/

  gateway:
    image: gateway:1.5
    depends_on:
      - eureka-server
    ports:
      - "8082:8082"
    environment:
      - spring.application.name=api-gateway
      - server.port=8082
      - eureka.client.service-url.defaultZone=http://eureka-server:8081/eureka
      - logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n
      - spring.cloud.gateway.discovery.locator.enabled=true
      - spring.cloud.gateway.discovery.locator.lower-case-service-id=true
      - management.endpoints.web.exposure.include=info
      - server.ssl.enabled=true
      - server.ssl.key-store-type=PKCS12
      - server.ssl.key-store=file:eureka.p12
      - server.ssl.key-store-password=aA258007195
      - server.ssl.key-alias=eureka
      - spring.cloud.gateway.httpclient.ssl.useInsecureTrustManager=true


  main_logic:
    image: main_logic:1.0
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8081/eureka
      - spring.kafka.bootstrap-servers=kafka:9092
    depends_on:
      - db
      - gateway
    ports:
      - "9999:9999"

  web_socket:
    image: web_socket:1.0
    depends_on:
      - db
      - gateway
    ports:
      - "8001:8001"

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: currency_graph
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - ./database_dump.sql:/docker-entrypoint-initdb.d/database_dump.sql
    ports:
      - 5432:5432